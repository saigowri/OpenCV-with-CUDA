//install dependencies
sudo apt-get -qq install libopencv-dev build-essential checkinstall cmake pkg-config yasm libjpeg-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev python-dev python-numpy libtbb-dev libqt4-dev libgtk2.0-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils ffmpeg cmake qt5-default checkinstall

//download the ZIP file
wget -O opencv-3.1.0.zip http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/3.1.0/opencv-3.1.0.zip/download

unzip opencv-3.1.0.zip
cd opencv-3.1.0
mkdir build
cd build

// before cmake - add the following line to the beginning of /storage/caos/gowri/gowri/opencv/opencv-3.1.0/CMakeLists.txt
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_FORCE_INLINES")

cmake -D WITH_CUDA=ON -D WITH_TBB=ON -D WITH_VTK=ON -D BUILD_EXAMPLES=ON -D INSTALL_C_EXAMPLES=ON -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/storage/caos/gowri/gowri -D CUDA_GENERATION=Kepler -D CUDA_TOOLKIT_ROOT_DIR=/usr/bin -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -D CUDA_ARCH_BIN="3.0 3.5" ..

//after cmake, before make - in ~/opencv/opencv-3.1.0/build/samples/gpu/CMakeFiles/example_gpu_opengl.dir/link.txt, add  
-lGL -lGLU -lglut 

make -j8 //8 jobs in parallel

make install

//in .bashrc
root=/usr/bin
export PATH=$PATH:/usr/bin/cuda
#export PATH=$PATH:/usr/local/cuda42/bin
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
if [ -z $LD_LIBRARY_PATH ]; then
        #LD_LIBRARY_PATH=/usr/bin/cuda/lib64
        LD_LIBRARY_PATH=/storage/caos/gowri/gowri/opencv/opencv-3.1.0/modules
else
        #LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/bin/cuda/lib64
        LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/storage/caos/gowri/gowri/opencv/opencv-3.1.0/modules
fi
export LD_LIBRARY_PATH
export http_proxy="http://proxy.iisc.ernet.in:3128";
export https_proxy="https://proxy.iisc.ernet.in:3128";
export socks_proxy="http://proxy.iisc.ernet.in:3128";
export OpenCV_DIR=$OpenCV_DIR:/storage/caos/gowri/gowri/opencv/opencv-3.1.0/cmake
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:storage/caos/gowri/gowri/lib/pkgconfig
export OpenCV_FOUND=TRUE

//add the following statement to /storage/caos/gowri/gowri/opencv/opencv-3.1.0/samples/gpu/CMakeLists.txt
cmake_minimum_required(VERSION 3.5.1)
project(HogCode)
set (OpenCV_DIR /storage/caos/gowri/gowri/opencv/opencv-3.1.0/build)
find_package(OpenCV REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
link_directories(${OpenCV_LIB_DIR})
add_executable(HogCode hog.cpp)
target_link_libraries(HogCode ${OpenCV_LIBS})

//while in /storage/caos/gowri/gowri/opencv/opencv-3.1.0/samples/gpu directory
cmake .
make
./HogCode
